{"version":3,"sources":["components/movie_form.js","components/movie.js","components/movie_list.js","components/body.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["MovieForm","props","state","isEdit","edit","currentInput","id","movie","country","handleChange","bind","e","name","target","value","Math","floor","random","this","setState","preventDefault","onSubmit","hideEditForm","console","log","handleSubmit","className","type","placeholder","onChange","onClick","handleCancel","Component","Movie","is_hover","item_id","item","updateMovie","itemId","listItems","movies","map","index","key","onMouseOver","handleHoverOn","onMouseLeave","handleHoverOff","icon","showEditForm","removeMovie","MovieList1","showEdit","items","data","currentItem","addMovie","newMovieList","movieId","newValue","listMovies","findIndex","movie_edit","filter","removeArr","Body","Header","library","add","faTrash","faEdit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d23db04b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class MovieForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state={\n      isEdit: this.props.edit,\n      currentInput: this.props.edit || {\n        id: null,\n        movie: \"\",\n        country: \"\"\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    const id = Math.floor(Math.random() * 10000);\n    \n    if (name === \"movie\"){\n      this.setState({\n        currentInput: {\n          id: id,\n          movie: value,\n          country: this.state.currentInput.country\n        }\n      })\n    } else {\n      this.setState({\n        currentInput: {\n          id: id,\n          movie: this.state.currentInput.movie,\n          country: value\n        }\n      })\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if(this.state.isEdit){\n      this.props.onSubmit(this.props.edit.id, this.state.currentInput)\n    } else {\n      this.props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        movie: this.state.currentInput.movie,\n        country: this.state.currentInput.country\n      })\n    }\n\n    this.setState({currentInput: {\n      id: null,\n      movie: \"\",\n      country: \"\"\n    }});\n  }\n\n  handleCancel(){\n    this.props.hideEditForm()\n  }\n\n  render() {\n    console.log(this.props.edit)\n    return(\n      <form onSubmit={(e) => this.handleSubmit(e)} className=\"movie-form\">\n        <input \n          type=\"text\"\n          name=\"movie\"\n          placeholder=\"Enter movie name\"\n          value={this.state.currentInput.movie}\n          onChange={(e) => this.handleChange(e)}  \n        ></input>\n        <input\n          type=\"text\"\n          name=\"country\"\n          placeholder=\"Enter country\"\n          value={this.state.currentInput.country}\n          onChange={(e) => this.handleChange(e)}  \n        ></input>\n        <button type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Submit</button>\n        {this.props.edit ? <button type=\"submit\" onClick={() => this.handleCancel()}>Cancel</button> : null}\n      </form>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class Movie extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state={\n      is_hover: false,\n      item_id: \"\",\n\t\t\titem: {\n        id: null,\n        movie: \"\",\n        country: \"\",\n        is_hover: false\n      }\n\t\t}\n\t}\n\n\tsubmitUpdate(value){\n    this.props.updateMovie(this.state.item.id, this.state.item.movie);\n\n    this.setState({\n      item: {\n      id: null,\n      movie: \"\",\n      country: \"\"\n    }})\n  }\n  \n  changeState(item){\n    this.setState({item: item})\n  }\n\n  handleHoverOn(itemId){\n    this.setState({ item_id: itemId, is_hover: true });\n  }\n\n  handleHoverOff(itemId){\n    this.setState({ item_id: itemId, is_hover: false });\n  }\n\n\trender(){\n    const items = this.props.movies;\n\t\tconst listItems = items.map((item, index) => \n    <tr \n      className=\"list\"\n      key={item.id}\n        onMouseOver={() => this.handleHoverOn(item.id)}\n        onMouseLeave={() => this.handleHoverOff(item.id)}>\n      <td>{item.movie}</td>\n      <td>{item.country}</td>\n      <td>\n          {this.state.item_id === item.id && this.state.is_hover ? \n          <span>\n            <FontAwesomeIcon className=\"faicons\" icon=\"edit\"\n              onClick={() => this.props.showEditForm(item.id)}/>\n          </span>\n          : null\n        }\n      </td>\n      <td>\n        {this.state.item_id === item.id && this.state.is_hover ? \n          <span>\n            <FontAwesomeIcon className=\"faicons\" icon=\"trash\"\n              onClick={() => this.props.removeMovie(item.id)}/>\n          </span>\n          : null\n        }\n      </td>\n    </tr>\n\t\t)\n\t\treturn(\n      <tbody>{listItems}</tbody>\n\t\t)\n\t}\n}","import React, { Component } from \"react\";\nimport MovieForm from \"./movie_form\";\nimport Movie from \"./movie\";\n\nexport default class MovieList1 extends Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      showEdit: false,\n      movie: null,\n      items: this.props.data,\n      currentItem: {\n        id: null,\n        movie: \"\",\n        country: \"\"\n      }\n    }\n\n    this.addMovie = this.addMovie.bind(this);\n    this.updateMovie = this.updateMovie.bind(this);\n    this.removeMovie = this.removeMovie.bind(this);\n    this.showEditForm = this.showEditForm.bind(this);\n    this.hideEditForm = this.hideEditForm.bind(this);\n  }\n\n  addMovie(item) {\n    if (!item.movie && !item.country)\n      return;\n\n    const newMovieList = [...this.state.items, item];\n    this.setState({items: newMovieList});\n  }\n\n  updateMovie(movieId, newValue) {\n    if (!newValue.movie && !newValue.country)\n      return;\n\n    const listMovies = this.state.items\n    const index = listMovies.findIndex(item => item.id === movieId)\n    listMovies[index] = newValue\n    this.setState({ items: listMovies });\n    this.hideEditForm();\n  }\n  \n  hideEditForm(){\n    this.setState({ showEdit: false });\n  }\n\n  showEditForm(movieId) {\n    const movie_edit = this.state.items.filter(item => item.id === movieId)\n    if (movie_edit)\n      this.setState({showEdit: true, movie: movie_edit[0]})\n  }\n\n  removeMovie(movieId) {\n    const removeArr = this.state.items.filter(item => item.id !== movieId);\n    this.setState({items: removeArr})\n  }\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <div className=\"left-menu\">\n          <h1>Add new movies</h1>\n          <MovieForm onSubmit={(e) => this.addMovie(e)} />\n          <table className=\"movies\">\n            <thead>\n              <tr>\n                <th className=\"movie-name\">Movie Name</th>\n                <th className=\"movie-coutry\">Country</th>\n                <th className=\"movie-edit\">Edit</th>\n                <th className=\"movie-delete\">Delete</th>\n              </tr>\n            </thead>\n            <Movie\n              movies={this.state.items}\n              showEditForm={this.showEditForm}\n              removeMovie={this.removeMovie}\n              updateMovie={this.updateMovie}\n            />\n          </table>\n        </div>\n        <div className=\"right-menu\">\n          {this.state.showEdit ?\n            <MovieForm edit={this.state.movie} hideEditForm={this.hideEditForm} onSubmit={this.updateMovie} />\n            : null}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport MovieList from \"./movie_list\";\nimport \"../stylesheets/movie.scss\";\nimport \"../stylesheets/left_menu.css\";\nimport \"../stylesheets/body.css\";\n\nclass Body extends Component {\n  render () {\n    const initdata=[\n      {\n        id: 1,\n        movie: \"Mulan 2020\",\n        country: \"China\"\n      },\n      {\n        id: 2,\n        movie: \"Ròm\",\n        country: \"VietNam\"\n      },\n      {\n        id: 3,\n        movie: \"Tenet\",\n        country: \"United Kingdom, United State\"\n      }\n    ]\n\t\treturn (\n\t\t\t<div className=\"body-component\">\n        <MovieList data={initdata} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport '../stylesheets/header.css'\n\nclass Header extends Component {\n  render () {\n\t\treturn (\n\t\t\t<div className='header-component'>\n\t\t\t\t<h2>Header</h2>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Body from './components/body';\nimport Header from './components/header';\nimport './App.css';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash);\nlibrary.add(faEdit);\n\nclass App extends Component {\n  render () {\n    return (\n      <div className='movie-app'>\n        <Header />\n        <Body />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}